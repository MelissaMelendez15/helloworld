pipeline {
    agent none

    stages {
        stage('Clonar repositorio') {
            agent { label 'agente-clonador' }
            steps {
                sh 'whoami && hostname && pwd'
                git branch: 'master', url: 'https://github.com/MelissaMelendez15/helloworld.git'
                stash includes: '**', name: 'workspace-clonado'
                echo 'Repositorio Clonado y guardado.'
            }
        }

        stage('Instalar dependencias') {
            agent { label 'agente-build' }
            steps {
                sh 'whoami && hostname && pwd'
                unstash 'workspace-clonado'
                sh 'pip3 install flask pytest requests --break-system-packages'
                echo 'Dependencias instaladas correctamente'
            }
        }

        stage('Build') {
            agent { label 'agente-build' }
            steps {
                sh 'whoami && hostname && pwd'
                unstash 'workspace-clonado'
                echo 'Build: Verificando archivos clonados...'
                sh 'ls -l'
                stash includes: '**', name: 'workspace-build'
                echo 'Build completado y guardado'
            }
        }

        stage('Iniciar Flask') {
            agent { label 'agente-deploy' }
            steps {
                sh 'whoami && hostname && pwd'
                unstash 'workspace-build'
                echo 'Build: Verificando archivos clonados...'
                sh 'PYTHONPATH=. nohup python3 app/api.py &'
                sh 'sleep 5'
                sh '''
                   if curl -s http://localhost:5000; then
                      echo "Flask iniciado correctamente."
                   else
                      echo "Error: Flask no inició correctamente..."
                      exit 1

                    fi
                '''
            }
        }

        stage('Iniciar Wiremock') {
            agent { label 'agente-deploy' }
            steps {
               sh 'whoami && hostname && pwd'
                sh '''
                   mkdir -p test/wiremock
                   if [ ! -f test/wiremock/wiremock-standalone-2.27.2.jar ]; then
                    echo "Descargando Wiremock JAR..."
                    curl -L https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.27.2/wiremock-standalone-2.27.2.jar \
                       -o test/wiremock/wiremock-standalone-2.27.2.jar
                   fi
                '''
                sh 'nohup java -jar test/wiremock/wiremock-standalone-2.27.2.jar --port 9090 --root-dir test/wiremock &'
                sh 'sleep 10'
                sh '''
                    if curl -s http://localhost:9090/__admin; then
                       echo "Wimerock iniciado correctamente"
                    else
                       echo "Error: Wimerock no inició correctamente."
                       exit 1

                       fi
                   '''

            }
        }

    }
}
