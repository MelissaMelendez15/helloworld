pipeline {
    agent none

    stages {
        stage('Clonar repositorio') {
            agent { label 'agente-clonador' }
            steps {
                sh 'whoami && hostname && pwd'
                git branch: 'master', url: 'https://github.com/MelissaMelendez15/helloworld.git'
                sh 'ls -l'
                stash includes: '**', name: 'workspace-clonado'
                echo 'Repositorio Clonado y guardado.'
            }
        }

        stage('Instalar dependencias') {
            agent { label 'agente-build' }
            steps {
                sh 'whoami && hostname && pwd'
                unstash 'workspace-clonado'
                sh 'python3 -m pip install --upgrade pip'
                sh 'python3 -m pip install flask pytest requests'
                echo 'Dependencias instaladas correctamente'
            }
        }

        stage('Build') {
            agent { label 'agente-build' }
            steps {
                sh 'whoami && hostname && pwd'
                unstash 'workspace-clonado'
                echo 'Build completado y guardado'
                stash includes: '**', name: 'workspace-build'
            }
        }

        stage('Iniciar Flask y Wiremock') {
            agent { label 'agente-deploy' }
            steps {
                sh 'whoami && hostname && pwd'
                unstash 'workspace-build'
                echo 'Iniciando Flask...'
                sh 'PYTHONPATH=. nohup python3 app/api.py --host=127.0.0.1 --port=5000 > flask.log 2>&1 &'
                sh 'sleep 5'
                sh 'curl -v http://localhost:5000/ || echo "Flask no respondió"'

                echo 'Iniciando Wiremock...'
                sh '''
                   mkdir -p test/wiremock
                   if [ ! -f test/wiremock/wiremock-standalone-2.27.2.jar ]; then
                    curl -L https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.27.2/wiremock-standalone-2.27.2.jar \
                       -o test/wiremock/wiremock-standalone-2.27.2.jar
                   fi
                   nohup java -jar test/wiremock/wiremock-standalone-2.27.2.jar --port 9090 --root-dir test/wiremock > wiremock.log 2>&1 &
                '''
                sh 'sleep 10'
                sh 'curl -v http://localhost:9090/__admin || echo "Wiremock no respondió"'
            }
        }

        stage('Tests en paralelo') {
            parallel {
                stage('Tests Unitarios') {
                    agent { label 'agente-build' }
                    steps {
                        sh 'whoami && hostname && pwd'
                        unstash 'workspace-build'
                        echo 'Ejecutando tests unitarios...'
                        sh 'python3 -m pytest test/unit --junitxml=result.xml || echo "Error en test unitario."'
                    }
                }

                stage('Tests Service') {
                    agent { label 'agente-deploy' }
                    steps {
                        sh 'whoami && hostname && pwd'
                        unstash 'workspace-build'
                        echo 'Verificando Flask antes del test de servicio...'
                        sh 'curl -v http://localhost:5000/ || echo "Flask no disponible antes del test de servicio"'
                        echo 'Ejecutando test de servicio...'
                        sh 'python3 -m pytest test/rest --junitxml=results-service.xml || echo "Error en test de servicio."'
                    }
                }
            }
        }
    }

    post {
        always {
            node('agente-clonador') {
                cleanWs()
            }
            
        }
        failure {
            echo 'El pipeline ha fallado. Revisa los errores.'
        }
        success {
            echo 'Pipeline completado con éxito.'
        }
    }
}
