pipeline {
    agent any

    stages {
         stage('Instalar dependencias') {
           steps {
                sh 'pip3 install flask pytest requests --break-system-packages'
            }
        }
         stage('Echo') {
            steps {
                echo '¡Hola desde Jenkins!  Reto 3 - Multiplicacíon y División'
            }
        }

        stage('Clonar repositorio - Develop') {
            steps {
                git branch: 'develop', url: 'https://github.com/MelissaMelendez15/helloworld.git'
                sh 'ls -la'
            }
        }

        stage('Verificar workspace') {
            steps {
                sh 'echo $WORKSPACE'
            }
        }

        stage('Build') {
            steps {
                echo 'Etapa de build vacia por ahora.'
            }
        }

        stage('Iniciar Flask') {
            steps {
                echo 'Iniciando Flask...'
                sh '''
                    if ! pgrep -f "app/api.py"; then
                       PYTHONPATH=. nohup python3 app/api.py &
                       sleep 5
                    fi
                    for i in {1..5}; do
                        curl -v http://localhost:5000/ && break || sleep 2
                    done
                '''
            }
        }

        stage('Iniciar Wiremock') {
            steps {
                echo 'Iniciando Wiremock...'
                sh '''
                   if ! pgrep -f "wiremock-standalone"; then
                       mkdir -p test/wiremock
                       if [ ! -f test/wiremock/wiremock-standalone-2.27.2.jar ]; then
                       echo "Descargando Wiremock JAR..."
                       curl -L https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.27.2/wiremock-standalone-2.27.2.jar \
                       -o test/wiremock/wiremock-standalone-2.27.2.jar
                   fi
                   nohup java -jar test/wiremock/wiremock-standalone-2.27.2.jar --port 9090 --root-dir test/wiremock &
                   sleep 10
                fi
                
                for i in {1..5}; do
                    curl -v http://localhost:9090/__admin && break || sleep 2
                done
            ''' 
            }
        }

        stage('Tests en paralelo') {
            parallel {
                stage('Unit') {
                    steps {
                        sh 'PYTHONPATH=. pytest test/unit --junitxml=result.xml'
                    }
                }

                stage('Service') {
                    steps {
                       sh 'curl -v http://localhost:5000/ || exit 1'
                       sh 'curl -v http://localhost:9090/ || exit 1'
                       sh 'PYTHONPATH=. pytest test/rest --junitxml=results-service.xml'
                    }
                }
            }
        }

        stage('Limpiar') {
            steps {
                echo 'Deteniendo Flask y Wiremock...'
                sh '''
                   pkill -f "app/api.py" || echo "Flask ya estaba detenido"
                   pkill -f "wiremock-standalone" || echo "Wiremock ya estaba detenido"
                '''
            }
        }

    }

    post {
        always {
            junit 'results-*.xml'
            cleanWs()
        }
    }
}
